{% extends 'base' %}

{% block sectionclass %}location{% endblock %}

{% block content %}
{% if location %}
<h2 class="title is-2">Edit Location: {{ location.name }}</h2>
{% else %}
<h2 class="title is-2">Add Location</h2>
{% endif %}

{% if error_msg %}
<div class="notification is-danger">{{ error_msg }}</div>
{% endif %}

<div class="spaced-headers">

<form action="" method="post">

<label class="label" for="name">Name</label>
<div class="field">
    <div class="control has-icons-left">
        <input class="input" type="text" id="name" name="name" value="{% if location %}{{ location.name }}{% endif %}" required>
        <div class="icon is-small is-left">
            <i class="fas fa-map-marker-alt"></i>
        </div>
    </div>
</div>

<label class="label" for="country">Country Code (2 Letters)</label>
<div class="field">
    <div class="control has-icons-left">
        <input class="input" type="text" id="country" name="country" minlength="2" maxlength="2" value="{% if location %}{{ location.country }}{% endif %}" required>
        <div class="icon is-small is-left">
            <i class="fas fa-globe-americas"></i>
        </div>
    </div>
</div>

<label class="label" for="elevation">Elevation (m ASL)</label>
<div class="field">
    <div class="control has-icons-left">
        <input class="input" type="number" id="elevation" name="elevation" min="-200" max="8000" step="1" value="{% if location %}{{ location.elevation }}{% endif %}" required>
        <div class="icon is-small is-left">
            <i class="fas fa-tachometer-alt"></i>
        </div>
    </div>
</div>

<label class="label" for="lat">Latitude</label>
<div class="field">
    <div class="control has-icons-left">
        <input class="input" type="number" id="lat" name="lat" min="-90" max="90" step="0.000001" value="{% if location and location.geog %}{{ location.geog.y }}{% endif %}" placeholder="47.29553">
        <div class="icon is-small is-left">
            <i class="fas fa-map-marker-alt"></i>
        </div>
    </div>
</div>

<label class="label" for="lon">Longitude</label>
<div class="field">
    <div class="control has-icons-left">
        <input class="input" type="number" id="lon" name="lon" min="-180" max="180" step="0.000001" value="{% if location and location.geog %}{{ location.geog.x }}{% endif %}" placeholder="8.91927">
        <div class="icon is-small is-left">
            <i class="fas fa-map-marker-alt"></i>
        </div>
    </div>
</div>

<div id="map" class="map">
    <div class="map-style-switcher switch-to-satellite icon">
        <i class="fas fa-satellite"></i>
    </div>
    <div class="map-style-switcher switch-to-default icon is-hidden">
        <i class="fas fa-map"></i>
    </div>
</div>

<script>
    const STYLE_DEFAULT = 'outdoors-v11';
    const STYLE_SATELLITE = 'satellite-v9';
    const ICON_MAP = 'fa-map';
    const ICON_SATELLITE = 'fa-satellite';
    const DEFAULT_CENTER = [8, 47];

    // Create map
    let style = STYLE_DEFAULT;
    const map = new mapboxgl.Map({
        container: 'map',
        style: `mapbox://styles/mapbox/${style}`,
        doubleClickZoom: false,
        {% if location and location.geog %}
        center: [{{ location.geog.x }}, {{ location.geog.y }}],
        zoom: 13,
        {% else %}
        center: DEFAULT_CENTER,
        zoom: 7,
        {% endif %}
    });

    // Find style switchers
    const styleSwitcherSatellite = document.querySelector('.switch-to-satellite');
    const styleSwitcherDefault = document.querySelector('.switch-to-default');

    // Style update function
    function updateStyle() {
        map.setStyle(`mapbox://styles/mapbox/${style}`);
        if (style === STYLE_DEFAULT) {
            styleSwitcherDefault.classList.add('is-hidden');
            styleSwitcherSatellite.classList.remove('is-hidden');
        } else {
            styleSwitcherDefault.classList.remove('is-hidden');
            styleSwitcherSatellite.classList.add('is-hidden');
        }
    }

    // Add navigation controls
    map.addControl(new mapboxgl.NavigationControl());

    // Add draggable marker
    const marker = new mapboxgl.Marker({draggable: true});
    {% if location and location.geog %}
        marker.setLngLat([{{ location.geog.x }}, {{ location.geog.y }}]);
    {% else %}
        marker.setLngLat(DEFAULT_CENTER);
    {% endif %}
    marker.addTo(map);

    // Function to update location from marker
    function updateCoordinatesFromMarker() {
        const lonLat = marker.getLngLat();
        const lonInput = document.getElementById('lon');
        const latInput = document.getElementById('lat');
        lonInput.value = lonLat.lng.toFixed(5);
        latInput.value = lonLat.lat.toFixed(5);
    }

    // Update coordinates on marker drag
    marker.on('dragend', updateCoordinatesFromMarker);

    // Update marker on click
    map.on('dblclick', function(e) {
        marker.setLngLat(e.lngLat)
        updateCoordinatesFromMarker();
    });

    // Handle style switches
    styleSwitcherDefault.addEventListener('click', () => {
        style = STYLE_DEFAULT;
        updateStyle();
    });
    styleSwitcherSatellite.addEventListener('click', () => {
        style = STYLE_SATELLITE;
        updateStyle();
    });
</script>

<div class="control submitcontrols">
    <button type="submit" class="button is-info">Submit</button>
</div>

</form>

</div>
{% endblock %}
